1. Kotlin 이란?
코틀린은 정적 언어 입니다. 따라서 컴파일 시점에 모든 객체나 메서드의 타입을 알 수 있습니다. 다른 말로 컴파일러가 타입을 확정하고 검증해 주는겁니다.

반대로 동적언어는 타입과 관계없이 모든값을 변수에 넣을 수 있고 이런 필드나 메소드의 접근에 대한 검등은 run time에 일어납니다.
따라서 코드길이가 더 짧아지고, 데이터 구조를 유연하게 가지고 갈 수 있는 장점이 있지만 이름을 잘 못 입력하는등의 실수도 컴파일시 걸러내지 못하는 단점도 있다.



2. Kotlin 사용 이유
실용성 / 간결성 / 안정성 / 상호 운용성

kotlin은 타입추론(type inference)이 가능

- 성능: 컴파일 타임에 이미 메서드 호출관계가 지정되어 런타임시 빠르다
- 신뢰성: 컴파일러가 어느 정도 컴파일타임에서 많은 오류를 잡아낸다.
- 유지 보수성: 코트상에서 객체의 타입을 알수 있기 때문에 코드를 다루기 쉽다
- 도구지원: 안전한 리팩토링이 가능하며, 개발툴은 정확한 코드 완성 기능을 제공할 수 있다.
-> nullpointerexception을 미연에 방지할 수 있도록 nullability check을 강력하게 지원



3. Kotlin 사용 방법
자바에서는 모든 제어문이 statement이나, kotlin에서는 반복문만 제외하고는 모두 expression입니다.
코틀린에서 함수나, 변수에 한정자를 명시적으로 나타내지 않으면 모두 public 입니다.
자바에서 property란, 멤버변수와 이 멤버변수의 getter, setter를 의미 -> Kotlin 은 멤버변수를 선언하면 그에 따른 getter/setter는 자동으로 컴파일러가 생성

스마트 캐스트(object의 타입 확인과 변환을 한번에 해주는 기능) 지원




***********************************************
참고 싸이트 : http://tourspace.tistory.com/99?category=797357
(영어)코틀린 공식 싸이트 : https://kotlinlang.org/docs/reference/basic-syntax.html
(한글)코틀린 개인 정리 싸이트 : https://legacy.gitbook.com/book/pluu/kotlin/details -> read
코틀린 기초 싸이트 : http://tourspace.tistory.com/100?category=797357

***********************************************



##### Java 공부 enum / type / interface /